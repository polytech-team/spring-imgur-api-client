/*
 * Imgur API
 * Imgur's API exposes the entire Imgur infrastructure via a standardized programmatic interface. Using Imgur's API, you can do just about anything you can do on imgur.com, while using your programming language of choice.
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.imgur.api;

import team.polytech.imgur.model.BasicBooleanResponse;
import team.polytech.imgur.model.BasicStringResponse;
import team.polytech.imgur.model.ImageResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImageApi
 */
@Ignore
public class ImageApiTest {

    private final ImageApi api = new ImageApi();

    
    /**
     * Delete an image.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteImageTest() {
        String imageHash = null;

        BasicBooleanResponse response = api.deleteImage(imageHash);

        // TODO: test validations
    }
    
    /**
     * Favorite an image.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void favoriteImageTest() {
        String imageHash = null;

        BasicStringResponse response = api.favoriteImage(imageHash);

        // TODO: test validations
    }
    
    /**
     * Get information about an image.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getImageTest() {
        String imageHash = null;

        ImageResponse response = api.getImage(imageHash);

        // TODO: test validations
    }
    
    /**
     * Update an image.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateImageTest() {
        String imageHash = null;
        String description = null;
        String title = null;

        BasicBooleanResponse response = api.updateImage(imageHash, description, title);

        // TODO: test validations
    }
    
    /**
     * Upload an image.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadImageTest() {
        String image = null;
        String album = null;
        String description = null;
        String name = null;
        String title = null;

        ImageResponse response = api.uploadImage(image, album, description, name, title);

        // TODO: test validations
    }
    
}
